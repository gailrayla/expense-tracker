{"ast":null,"code":"var _jsxFileName = \"/Users/gailparayno/expense-tracker/src/components/Expenses.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"./Card\";\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  // Practicing concept of derived state\n  // let filterInfoText = '2019, 2021, & 2022';\n  // if (filteredYear === '2019') {\n  //   filterInfoText = '2020, 2021, & 2022';\n  // } else if (filteredYear === '2020') {\n  //   filterInfoText = '2019, 2021, & 2022';\n  // } else if (filteredYear === '2021') {\n  //   filterInfoText = '2019, 2020, & 2022';\n  // } else {\n  //   filterInfoText = '2019, 2020, & 2021';\n  // }\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 27\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 6\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["/Users/gailparayno/expense-tracker/src/components/Expenses.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\nimport Card from \"./Card\";\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\n\nconst Expenses = (props) => {\n    const[filteredYear, setFilteredYear] = useState('2020');\n   \n    // Practicing concept of derived state\n    // let filterInfoText = '2019, 2021, & 2022';\n    // if (filteredYear === '2019') {\n    //   filterInfoText = '2020, 2021, & 2022';\n    // } else if (filteredYear === '2020') {\n    //   filterInfoText = '2019, 2021, & 2022';\n    // } else if (filteredYear === '2021') {\n    //   filterInfoText = '2019, 2020, & 2022';\n    // } else {\n    //   filterInfoText = '2019, 2020, & 2021';\n    // }\n    \n    const filterChangeHandler = selectedYear => {\n      setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    let expensesContent = <p> No expenses found.</p>;\n    if (filteredExpenses.length > 0) {\n        expensesContent = filteredExpenses.map((expense) => (\n            <ExpenseItem\n                title={expense.title}\n                amount={expense.amount} \n                date={expense.date}\n            /> \n        ));\n    }\n\n    return (\n     <div>\n        <Card className=\"expenses\">\n        <ExpensesFilter \n        selected={filteredYear} \n        onChangeFilter={filterChangeHandler} ></ExpensesFilter>\n      {expensesContent}\n        \n    </Card>\n     </div>   \n    )\n}\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAK,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;;EAEvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,mBAAmB,GAAGC,YAAY,IAAI;IAC1CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACnD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,YAAY;EACjE,CAAC,CAAC;EAEF,IAAIW,eAAe,gBAAGf,OAAA;IAAAgB,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAChD,IAAIZ,gBAAgB,CAACa,MAAM,GAAG,CAAC,EAAE;IAC7BN,eAAe,GAAGP,gBAAgB,CAACc,GAAG,CAAEX,OAAO,iBAC3CX,OAAA,CAACL,WAAW;MACR4B,KAAK,EAAEZ,OAAO,CAACY,KAAM;MACrBC,MAAM,EAAEb,OAAO,CAACa,MAAO;MACvBZ,IAAI,EAAED,OAAO,CAACC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACJ,CAAC;EACN;EAEA,oBACCpB,OAAA;IAAAgB,QAAA,eACGhB,OAAA,CAACJ,IAAI;MAAC6B,SAAS,EAAC,UAAU;MAAAT,QAAA,gBAC1BhB,OAAA,CAACH,cAAc;QACf6B,QAAQ,EAAEtB,YAAa;QACvBuB,cAAc,EAAErB;MAAoB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,EACxDL,eAAe;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEX,CAAC;AAAAjB,EAAA,CA7CKF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}